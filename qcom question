问题：
备注：艾为PA建立工作时间100ms左右，若打开通路马上播放数据，可能存在丢音、第一声小等异常。可以采取下面两种方法规避下。两者目的都是给PA预留建立稳定的时间。 
1. 添加延迟，打开通路后，延迟100ms左右，待PA文档后，播放数据。 
2. 添加静音数据，刚开始播放的buffer数据前，插入100ms左右的静音数据。 
Lineout打开关闭后，PM异常发热。原因是我们使用lineout输出，但高通Speaker Boost默认开启，lineout一旦打开，pm异常且无法恢复，导致异常发热。需要在xm文件中关闭Speaker Boost。即：<ctl name="Speaker Boost" value="DISABLE" />。 注意：若我们不使用Speaker Boost，最好关闭。
死机问题：
1、	dts相关死机
问题原因：DTS设置参数访问内存异常导致
问题解决：DTS修改，设置参数之前判断topology是否是SRS。
2、	录屏场景死机
问题原因：与aac编码方式有关，代码尚未开源，高通需要进一步定位；问题解决：采取规避措施，录屏暂时修改编码方式为AMR，目前尚未出问题。 备注：修改编码格式AMR_NB后，由于该格式编码方式限制，采样率和声道数等受到限制。
外放杂音杂音问题：
1、	问题表现：播放铃声时，插拔耳机，外放会出现杂音，根本无法听的声音。只能重启后恢复。 问题分析： （a）问题出现时，voice正常，只有audio有问题； （b）audio中铃声和音乐异常，而使用low_latency的触摸音等提示音正常，可能与audio 后处理有关； （c）关闭dts后，恢复正常，且QXDM log中，进入dts模块前正常，出dts模块异常，因此该问题与dts处理有关。Dts问题需要dts同事处理； 问题解决：dts定位反复插拔耳机，导致dts中AEQ模块异常，需要上层插拔耳机时候，设置下状态。 插入耳机: AudioMan.setParameters("srs_spk_int:aeq_lrlink_enable=0"); 拔掉耳机：AudioMan.setParameters("srs_spk_int:aeq_lrlink_enable=1"); 备注：该平台由于铃声使用low_latency，存在杂音问题。通过修改铃声usecase（改为deep_buffer）规避杂音，从而使铃声走dts音效。
耳机杂音：
codec pm8953引入DRE功能，使能DRE后，耳机会有杂音。高通通过CR964639合
入该功能，NX549J通过关闭DRE功能来规避杂音问题。DRE功能介绍较少，文档对DRE的介绍和弊端如下：Compander (DRE) Limitations: 
1. Codec driver does not handle switch off compander while playback path is still active 
2. When compander is on, analog gain cannot be controlled. You can only control CODEC digital gain.
忽大忽小问题：
音频未修改任何东西情况下，导致下一个版本喇叭忽大忽小。通过排查提交记录，确定与最小系统同事关闭内核log有关。Log的关闭可能导致内核运行更快。音频这边QXDM数据正常，对比codec寄存器后，发现寄存器存在差异。最终确定是lineout上电时候，寄存器未设置成功导致，需要在处理PRT_PMU和POST_PMU之间加入适当延迟，以保证寄存器设置成功。本项目加入5ms延迟。
无声问题：
现象：开机后马上使用喇叭，几秒后喇叭无声。
分析：a.查看内核dapmlog，发现使用中喇叭通路被关闭，但hal层并无关闭通路的动作，关闭通路动作并非hal发出，需要从hal层以下找原因。 b．在audio_route.c添加log后发现，关闭喇叭控制被设置。目前这个控制除了hal层设置外，只有开机铃声可以设置。 c. 关闭开机铃声后，问题不可复现，进一步添加log后，确认问题是由于播放完开机铃声后关闭通路所致。正常情况下，开机铃声播放完毕马上关闭通路，此时Android未启动完成。但开机铃声关闭动作未发出时，Android已经启动完成，若用户马上使用喇叭。开机铃声发出关闭喇叭通路指令后，底层会把喇叭关闭，而测试上层并未知道喇叭已经关闭。 备注：正常情况下，通路都是经HAL层关闭，但开机铃声绕开hal层逻辑关闭通路进行操作。 d．开机铃声同事优化开机铃声，保证用户使用时，开机流程已经走完。问题得以解决。
耳机误识别问题：增加延时
耳机检测问题（喇叭PA接在右声道）
1、由于耳机左、右声道上的两个施密特触发，被用于耳机类型检测。而在目前方案喇叭发生情况下，插入耳机；由于耳机左、右声道正用于输出，会造成耳机类型检测错误。参考设计，在耳机类型检测过程中，耳机的左、右声道的PA必现处于关闭状态。
目前解决方法是在，收到耳机插入事件后，立刻关闭耳机PA。
负面影响：
收到耳机插入事件后，立刻关闭耳机PA。会导致外放喇叭立刻无声，用户体验不好。外放音乐情况下，插入耳机，喇叭会立刻无声；系统识别到耳机后，声音才会从耳机输出，整个过程大概有1~2秒。
POP音问题：见文档
DOLBY 开关卡顿
现象描述：用耳机听歌曲，在开关DOLBY的时候，会导致声音停顿一下。
问题分析：有些项目要求需要HIFI，并且也添加了DOLBY音效。由于DOLBY音效是集成在DSP中的，所以所有的声音输出都会有DOLBY音效处理的。由于DOLBY音效处理会导致HIFI指标有影响。在不使用DOLBY音效的情况下HIFI的THD+N能够达到96DB，而启用DOLBY音效，并且是处于关闭状态下，测试耳机HIIF的THD+N智能达到70DB左右，与HIFI指标相差很大。所以根据该需求，需要在关闭DOLBY的时候切换Topology ID，切换成高通的通路，在切换的过程中，会导致声音的停顿。这个属于正常问题。

MTK 平台 慢插四段识别成三段：
如果是缓慢插入四段式耳机被识别为三段式耳机的话，缓慢过程花费时间不能超过6s。因为缓慢插入四段式耳机先识别为三段式耳机，MTK的耳机驱动设计是，当识别为三段式耳机的时候会启动6s的timer，6s后会关闭
accdet模块，因为三段式耳机无任何按键操作，这样关闭accdet可以做到low
power功能。当accdet被关闭后，如果再完全插入耳机的话，不会被识别为正确的四段式耳机。

MTK插入耳机后等待2s时间才显示图标或者检测到耳机MIC类型问题：见文档

