中断处理程序：包括顶半部和底半部，软件中断上下文和进程上下文；内部中断和外部中断；向量中断和非向量中断，中断处理流程？
https://blog.csdn.net/qq_38500662/article/details/80598486
https://blog.csdn.net/weixin_42092278/article/details/81989449
https://blog.csdn.net/baidu_33553376/article/details/52371699
中断：所谓中断就是指CPU在正常执行程序的时候，由于内部/外部事件的出发、或由程序预先设定而引起CPU暂时中止当前正在执行的程序，保存被执行程序相关信息到栈中，转而去执行为内部/外部事件、或由程序预先设定的事件的中断服务子程序，待执行完中断服务子程序后，CPU再获取被保存在栈中被中断的程序的信息，继续执行被中断的程序，这一过程叫做中断。
中断向量：中断服务程序的入口地址。
中断向量表：把系统中所有的中断类型码及其对应的中断向量按一定的规律存放在一个区域内，这个存储区域就叫做中断向量表
中断源：IA32中有三大类中断源：1、软中断/内中断。 2、外中断/硬件中断   3、异常
中断处理过程：
请求中断→响应中断→关闭中断→保留断点→中断源识别→保护现场→中断服务子程序→恢复现场→中断返回。

（1）某一中断源向CPU发起中断请求，对于外部中断CPU在当前指令最后一个时钟周期查询中断请求信号的有效性，在系统开中断的情况下，CPU向中断源回送中断应答信号，系统进入中断响应周期。（CPU对系统内部中断源提出的中断请求必须响应，而且自动取得中断服务子程序的入口地址，执行中断服务
 子程序）；
（2）CPU响应中断后，将状态标志寄存器压入堆栈保护；
（3）再将其中的中断标志位清除从而关闭中断；
（4）CPU将当前CS（代码段地址）和IP（将要执行的下一条地址）压入堆栈保护断点；
（5）CPU确定提出请求的中断源，获得中断向量号，在对应的中断向量表获得中断入口地址，
   装入CS和IP中；
（6）将断点处各寄存器的内容压入堆栈保护现场；
（7）此时程序跳转至中断服务子程序执行；
（8）中断处理完毕，将堆栈各寄存器内容弹栈，恢复断点处各寄存器的值；
（9）在中断服务子程序最后安排一条返回指令，执行该指令将堆栈中CS和IP的值弹出，恢复主程序 断点处地址值，同时恢复标志寄存器的内容。程序转至被中断的程序继续执行。
http://www.cnblogs.com/wulei0630/p/9502143.html
中断处理流程总结
（1） 发生中断后，CPU执行异常向量vector_irq的代码；
（2）在vector_irq里面，最终会调用中断处理C程序总入口函数asm_do_IRQ();
（3）asm_do_IRQ()根据中断号调用irq_des[NR_IRQS]数组中的对应数组项中的handle_irq();
（4）handle_irq()会使用chip的成员函数来设置硬件，例如清除中断，禁止中断，重新开启中断等；
（5）handle_irq逐个调用用户在action链表中注册的处理函数。

堆栈：异同；什么要压栈：中断号、寄存器信息（中断时，状态标志寄存器）、当前代码段地址、下一条将要执行的地址
I2S音频流：
Regmap机制：
Dma机制：

